@model Enkaizen.Todo.Web.Models.TodoModels.TodoIndexModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager
@inject SignInManager<ApplicationUser> _signInManager

@{
    ViewData["Title"] = "All Todos";
}

@if (_signInManager.IsSignedIn(User))
{
    var loggedInUser = await _userManager.GetUserAsync(User);
    if (loggedInUser != null && (await _userManager.IsInRoleAsync(loggedInUser, "Admin")))
    {
        <div class="row mb-2">
            <div class="col-md-8 offset-2">
                <a class="btn btn-outline-primary" asp-controller="Todos" asp-action="Create">Create Todo</a>
            </div>
        </div>
    }
}

<div class="row">
    <div class="col-md-8 offset-2" id="todo-container">
        @for (int i = 0; i < Model.Todos.Count(); ++i)
        {
            <div class="row no-gutters" id="single-todo" title="@Model.Todos[i].CreationDate">
                <div class="col-md-10">
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                @if (Model.Todos[i].IsDone) {
                                    @Html.CheckBoxFor(m => m.Todos[i].IsDone,
                                    new
                                         {
                                        @class = "mark-done",
                                        onClick = string.Format("MarkDone(this, '{0}')", Model.Todos[i].Id),
                                        @disabled = "disabled"
                                    })
                                }
                                else {
                                    @Html.CheckBoxFor(m => m.Todos[i].IsDone,
                                    new
                                         {
                                        @class = "mark-done",
                                        onClick = string.Format("MarkDone(this, '{0}')", Model.Todos[i].Id),
                                    })
                                }
                            </div>
                        </div>
                        @if (Model.Todos[i].IsDone) {
                            <input type="text" class="form-control text-muted" aria-label="Text input with checkbox" value="@Model.Todos[i].Description" disabled>
                        }
                        else {
                            <input type="text" class="form-control text-info" aria-label="Text input with checkbox" value="@Model.Todos[i].Description" disabled>
                        }
                    </div>
                </div>
                @{
                    var loggedInUser = await _userManager.GetUserAsync(User);
                    if (loggedInUser != null && (await _userManager.IsInRoleAsync(loggedInUser, "Admin")))
                    {
                        <div class="col-md-2">
                            <button style="border: 1px solid darkgray;" class="btn" onclick="DeleteTodo(this, '@Model.Todos[i].Id')">
                                <i class="text-danger fas fa-trash-alt"></i>
                            </button>
                        </div>
                    }
                }
            </div>
        }
    </div>
</div>

@section Scripts {

    <script type="text/javascript" src="~/js/todoIndex.js"></script>

    <script type="text/javascript">

        function MarkDone(checkBox, todoId) {
            $.ajax({
                url: '/Todos/MarkDone',
                type: 'POST',
                dataType: 'text',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { todoId: todoId },
                success: function (response) {
                    $(checkBox).attr('disabled', 'disabled')
                },
                error: function (data, status, xhr) {
                    console.log(status);
                }
            })
        }

    </script>
}